plugins {
    id "io.gitlab.arturbosch.detekt" version(libs.versions.detekt)
    id "com.android.application"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
    id "kotlin-android"
    id "kotlin-parcelize"
    id "kotlin-kapt"
    id "androidx.navigation.safeargs.kotlin"
    id "dagger.hilt.android.plugin"
    id 'com.google.firebase.firebase-perf'
}

apply from: 'https://raw.githubusercontent.com/Hipo/macaron/master/config/quality/quality.gradle'

def flavorsGradlePath = 'flavors.gradle'
def browsersGradlePath = 'browsers.gradle'
def offrampGradlePath = 'offramp.gradle'
if (project.file(flavorsGradlePath).exists()) {
    apply from: flavorsGradlePath
}
if (project.file(browsersGradlePath).exists()) {
    apply from: browsersGradlePath
}
if (project.file(offrampGradlePath).exists()) {
    apply from: offrampGradlePath
}

android {
    compileSdkVersion targets.compileSdkVersion
    defaultConfig {
        versionCode peraApplication.versionCode
        versionName peraApplication.versionName
        applicationId application.applicationId
        minSdkVersion targets.minSdkVersion
        targetSdkVersion targets.targetSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        releaseLocal {
            def localProps = new Properties()
            try {
                localProps.load(new FileInputStream(file('../local.properties')))
                storeFile file(localProps["RELEASE_STORE_FILE"])
                storePassword localProps["RELEASE_STORE_PASSWORD"]
                keyAlias localProps["RELEASE_KEY_ALIAS"]
                keyPassword localProps["RELEASE_KEY_PASSWORD"]
            } catch (e) {
                println(e)
            }
        }
    }

    buildTypes {
        release {
            // signingConfig signingConfigs.releaseLocal //enable this to sign the release
            multiDexEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [enableCrashReporting: "true", enableFirebasePerformanceLogcat: "false"]
        }

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix " (DEBUG)"
            multiDexEnabled true
            minifyEnabled false
            manifestPlaceholders = [enableCrashReporting: "false", enableFirebasePerformanceLogcat: "true"]
            resValue("string", "app_name", "Pera Wallet (Dev)")
        }
    }

    flavorDimensions "server"
    productFlavors {
        def apiKeyProps = new Properties()
        def apiUrlProps = new Properties()

        staging {
            dimension "server"
            versionNameSuffix " (STAGING)"
            applicationIdSuffix ".staging"
            buildConfigField "String", "APPLICATION_NAME", '"pera"'
            buildConfigField "String", "DEEPLINK_PREFIX", '"algorand://"'

            apiKeyProps.load(new FileInputStream(file('../app/src/staging/api-key.properties')))
            apiUrlProps.load(new FileInputStream(file('../app/src/main/api-url.properties')))

            buildConfigField "String", "ALGORAND_BASE_URL", apiUrlProps["NODE_TESTNET_URL"]
            buildConfigField "String", "ALGORAND_API_KEY", apiKeyProps["ALGORAND_API_KEY"]
            buildConfigField "String", "INDEXER_API_KEY", apiKeyProps["INDEXER_API_KEY"]
            buildConfigField "String", "MOBILE_API_KEY", apiKeyProps["MOBILE_API_KEY"]
            buildConfigField "String", "MOBILE_ALGORAND_MAINNET_BASE_URL", '"https://mainnet.staging.api.perawallet.app/"'
            buildConfigField "String", "MOBILE_ALGORAND_TESTNET_BASE_URL", '"https://testnet.staging.api.perawallet.app/"'
            buildConfigField "String", "PERA_3D_EXPLORER_BASE_URL", '"https://static-hosting.perawallet.app/3dviewer/index.html"'
            buildConfigField "String", "DISCOVER_WEBVIEW_USERNAME", apiKeyProps["DISCOVER_WEBVIEW_USERNAME"]
            buildConfigField "String", "DISCOVER_WEBVIEW_PASSWORD", apiKeyProps["DISCOVER_WEBVIEW_PASSWORD"]
            buildConfigField "String", "DISCOVER_VERSION", "\"${discoverVersions.staging}\""
            buildConfigField "String", "DISCOVER_URL", '"https://discover-mobile-staging.perawallet.app/"'
            buildConfigField "String", "DISCOVER_BROWSE_DAPP_URL", '"https://discover-mobile-staging.perawallet.app/main/browser"'
            buildConfigField "String", "MELD_URL", '"https://mainnet.staging.api.perawallet.app/v1/onramp-services/meld/redirect-to-fluidmoney/?walletAddress="'
            buildConfigField "String", "NODE_MAINNET_URL", apiUrlProps["NODE_MAINNET_URL"]
            buildConfigField "String", "NODE_TESTNET_URL", apiUrlProps["NODE_TESTNET_URL"]
            buildConfigField "String", "INDEXER_MAINNET_URL", apiUrlProps["INDEXER_MAINNET_URL"]
            buildConfigField "String", "INDEXER_TESTNET_URL", apiUrlProps["INDEXER_TESTNET_URL"]
        }

        prod {
            dimension "server"
            buildConfigField "String", "APPLICATION_NAME", '"pera"'
            buildConfigField "String", "DEEPLINK_PREFIX", '"algorand://"'

            apiKeyProps.load(new FileInputStream(file('../app/src/prod/api-key.properties')))
            apiUrlProps.load(new FileInputStream(file('../app/src/main/api-url.properties')))

            buildConfigField "String", "ALGORAND_BASE_URL", apiUrlProps["NODE_MAINNET_URL"]
            buildConfigField "String", "ALGORAND_API_KEY", apiKeyProps["ALGORAND_API_KEY"]
            buildConfigField "String", "INDEXER_API_KEY", apiKeyProps["INDEXER_API_KEY"]
            buildConfigField "String", "MOBILE_API_KEY", apiKeyProps["MOBILE_API_KEY"]
            buildConfigField "String", "MOBILE_ALGORAND_MAINNET_BASE_URL", '"https://mainnet.api.perawallet.app/"'
            buildConfigField "String", "MOBILE_ALGORAND_TESTNET_BASE_URL", '"https://testnet.api.perawallet.app/"'
            buildConfigField "String", "PERA_3D_EXPLORER_BASE_URL", '"https://static-hosting.perawallet.app/3dviewer/index.html"'
            buildConfigField "String", "DISCOVER_WEBVIEW_USERNAME", apiKeyProps["DISCOVER_WEBVIEW_USERNAME"]
            buildConfigField "String", "DISCOVER_WEBVIEW_PASSWORD", apiKeyProps["DISCOVER_WEBVIEW_PASSWORD"]
            buildConfigField "String", "DISCOVER_VERSION", "\"${discoverVersions.prod}\""
            buildConfigField "String", "DISCOVER_URL", '"https://discover-mobile.perawallet.app/"'
            buildConfigField "String", "DISCOVER_BROWSE_DAPP_URL", '"https://discover-mobile.perawallet.app/main/browser"'
            buildConfigField "String", "MELD_URL", '"https://mainnet.api.perawallet.app/v1/onramp-services/meld/redirect-to-fluidmoney/?walletAddress="'
            buildConfigField "String", "NODE_MAINNET_URL", apiUrlProps["NODE_MAINNET_URL"]
            buildConfigField "String", "NODE_TESTNET_URL", apiUrlProps["NODE_TESTNET_URL"]
            buildConfigField "String", "INDEXER_MAINNET_URL", apiUrlProps["INDEXER_MAINNET_URL"]
            buildConfigField "String", "INDEXER_TESTNET_URL", apiUrlProps["INDEXER_TESTNET_URL"]
        }
    }

    kapt {
        correctErrorTypes = true
    }

    compileOptions {
        coreLibraryDesugaringEnabled true

        targetCompatibility = JavaVersion.VERSION_17
        sourceCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    sourceSets {
        // Adds exported schema location as test app assets.
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    buildFeatures {
        viewBinding true
        buildConfig = true
    }
    namespace application.applicationId
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation libs.kotlinx.coroutines.core
    implementation libs.kotlinx.coroutines.android

    implementation libs.material
    implementation libs.flexbox
    implementation libs.appcompat
    implementation libs.legacy.support.v4
    implementation libs.lifecycle.extensions
    implementation libs.lifecycle.viewmodel.ktx
    implementation libs.lifecycle.common.java8
    implementation libs.constraintlayout
    implementation libs.core.ktx

    implementation platform(libs.firebase.bom)
    implementation libs.bundles.firebase

    implementation libs.biometric

    implementation libs.zxing.android.embedded

    implementation libs.room.runtime
    implementation libs.room.ktx
    kapt libs.room.compiler

    implementation libs.navigation.fragment.ktx
    implementation libs.navigation.ui.ktx

    implementation libs.ble

    implementation libs.fragment.ktx

    implementation libs.multidex

    implementation libs.browser

    implementation libs.paging.runtime.ktx

    implementation libs.tink.android

    implementation libs.review.ktx

    implementation libs.hilt.android.dagger
    kapt libs.hilt.android.compiler
    kapt libs.hilt.androidx

    implementation libs.glide.image
    kapt libs.glide.compiler

    implementation libs.lottie

    implementation libs.retrofit
    implementation libs.converter.gson
    implementation libs.logging.interceptor

    // Chart
    implementation libs.mpandroidchart

    coreLibraryDesugaring libs.desugar.jdk

    // Wallet Connect v1
    implementation libs.java.websocket
    implementation libs.khex
    implementation libs.moshi.core
    implementation libs.moshi.kotlin

    // Wallet Connect v2
    implementation(platform(libs.walletconnect))
    implementation(libs.android.core) {
        exclude group: 'com.jakewharton.timber', module: 'timber'
    }
    implementation libs.sign
    implementation libs.web3wallet

    // ExoPlayer
    implementation libs.exoplayer

    implementation(libs.algosdk) {
        exclude group: 'org.bouncycastle'
    }

    // Test
    testImplementation libs.junit
    androidTestImplementation libs.room.testing
    androidTestImplementation libs.runner
    androidTestImplementation libs.espresso.core
}
